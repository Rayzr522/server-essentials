#!/bin/bash

MC_VERSION="1.12.2"

if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "$1" = "help" ] || [ "$1" = "?" ]; then
    echo "
$(tput setaf 1)$(tput bold)Usage:$(tput sgr0) server-essentials [version]
    $(tput bold)version:$(tput sgr0) The Minecraft server version to install (default: 1.12)
"
    exit 1
fi

if [ ! -z "$1" ]; then
    MC_VERSION="$1"
fi

DIR="$PWD"
PLUGINS="$PWD/plugins/"
TMP="$(mktemp -d -t server-essentials-XXXXXX)"

[ -d "$PLUGINS" ] || mkdir ./plugins/

trap "fail Cancelled install" SIGINT

# Utility methods
function fail {

    taskfail
    clean

    echo -e "\n$(tput setaf 1)Error: $(tput sgr0)$*"
    exit 1
}

function clean {
    rm -fr "$TMP"
}

function configure {
    cd "$DIR" || fail "Could not find server directory"
    [ -f eula.txt ] || echo "eula=true" > eula.txt

    echo '#!/bin/bash
cd "$(dirname "$0")"
java -Xmx2G -jar spigot-*.jar' > start.sh
    chmod +x start.sh
}

# Task methods
function task {
    echo -en "$(tput setaf 3)»$(tput sgr0) $(tput bold)$*$(tput sgr0) "
}

function taskdone {
    echo -en "\r$(tput setaf 2)✔$(tput sgr0)\n"
}

function taskfail {
    echo -en "\r$(tput setaf 1)✖$(tput sgr0)\n"
}

# Download methods
function get-file {
    curl -fsSL "$1" -o "$2" 2> /dev/null || return 1
}

function jenkins {
    task "Installing $1 from $2"

    cd "$TMP" || fail "Failed to enter temp folder ($TMP)"
    (mkdir "$1" && cd "$1") || fail "Failed to create folder for $1"
    get-file "$2/job/$1/lastSuccessfulBuild/artifact/*zip*/archive.zip" all.zip || fail "Failed to download $1 from $2 :'( Create an issue for support."
    (unzip all.zip > /dev/null && mv ./archive/* . && rm -fr ./archive/) || fail "Failed to unzip $1 :'( Create an issue for support"

    shift 2
    OUTPUT="$1"
    shift

    for folder in "$@"; do
        mv ./"$folder"/*.jar "$OUTPUT"
    done

    taskdone
}

function bukkit {
    task "Installing $1"

    cd "$TMP" || fail "Failed to enter temp folder ($TMP)"
    (mkdir "$1" && cd "$1") || fail "Failed to create folder for $1"
    get-file "https://dev.bukkit.org/projects/$2/files/latest" "$1.jar" || fail "Failed to download $1"
    mv ./*.jar "$PLUGINS"

    taskdone
}



###########################################################################
##################### ACTUALLY DOWNLOAD SOME CRAP NOW #####################
###########################################################################


task "Installing Spigot $MC_VERSION from primary URL"
get-file "https://cdn.getbukkit.org/spigot/spigot-$MC_VERSION.jar" "spigot-$MC_VERSION.jar" || {
    taskfail "Failed to install Spigot $MC_VERSION from first URL"
    task "Installing Spigot $MC_VERSION from secondary URL"
    get-file "https://cdn.getbukkit.org/spigot/spigot-$MC_VERSION-R0.1-SNAPSHOT-latest.jar" "spigot-$MC_VERSION.jar" || fail "Failed to install Spigot $MC_VERSION"
}
taskdone

jenkins EssentialsX "https://ci.drtshock.net" "$PLUGINS" Essentials/target EssentialsChat/target
jenkins ProtocolLib "http://ci.dmulloy2.net" "$PLUGINS" modules/ProtocolLib/target
jenkins ViaVersion "http://ci.viaversion.com" "$PLUGINS" jar/target

bukkit PlugMan plugman
bukkit PermissionsEx permissionsex
bukkit Vault vault
bukkit WorldEdit worldedit
bukkit WorldGuard worldguard
bukkit Multiverse-Core multiverse-core
bukkit Holographic-Displays hoographic-displays

task "Installing Multiverse-NetherPortals"
get-file "https://dev.bukkit.org/projects/multiverse-netherportals/files/772769/download" "$PLUGINS/Multiverse-NetherPortals-2.5.jar" || fail "Failed to install Multiverse-NetherPortals"
taskdone

task "Configuring"; configure; taskdone
task "Cleaning up"; clean; taskdone



###########################################################################
#################### ALL DONE NOW, NOTHING TO SEE HERE ####################
###########################################################################


echo ""
echo "$(tput bold)Welcome to server-essentials!"
echo "Written by Rayzr522 & ACA30"
echo ""
echo "$(tput smul)$(tput setaf 2)$(tput bold)
Server setup complete. You can run the server with ./start.sh
$(tput rmul)$(tput sgr0)"
echo ""
